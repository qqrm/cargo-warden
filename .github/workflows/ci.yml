name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  actionlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-actionlint@v1
        with:
          reporter: github-check
          github_token: ${{ secrets.GITHUB_TOKEN }}
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy, llvm-tools-preview
      - uses: Swatinem/rust-cache@v2
      - run: sudo apt-get update && sudo apt-get install -y pkg-config libseccomp-dev protobuf-compiler
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-machete
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-audit
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-udeps
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-spellcheck
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-geiger
      - run: cargo fmt --all -- --check
      - run: cargo check --tests --benches
      - run: cargo clippy --all-targets --all-features -- -D warnings
      - run: cargo nextest run
      - run: cargo machete
        continue-on-error: true
      - run: cargo audit
      - run: cargo llvm-cov --no-report
      - run: cargo spellcheck --code 1
        continue-on-error: true
      - run: cargo geiger --all-features --output-format GitHubMarkdown
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo +nightly udeps --all-targets --all-features

  examples:
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y pkg-config libseccomp-dev protobuf-compiler
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: ./run_examples.sh

  fuzz:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt-get update && sudo apt-get install -y pkg-config libseccomp-dev protobuf-compiler clang llvm
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
      - run: cargo install cargo-fuzz
      - run: cargo fuzz build net
